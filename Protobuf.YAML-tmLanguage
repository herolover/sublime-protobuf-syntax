# [PackageDev] target_format: plist, ext: tmLanguage
name: Protocol Buffer
scopeName: source.proto
fileTypes: [proto]
uuid: 750ac1f3-b172-48de-b1a4-a3c310c4a293

patterns:
- include: '#comments'

- include: '#storagetypes'

- include: '#enum'

- include: '#message'

- include: '#option'

- include: '#constants'

- include: '#strings'

- include: '#oneof'

- include: '#packaging'

- name: constant.numeric.proto
  match: \b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)\b

repository:
  comments:
    patterns:
    - name: comment.block.proto
      begin: /\*
      end: \*/
    - name: comment.line.double-slash.proto
      begin: //
      end: $\n?

  constants:
    name: constant.language.proto
    match: \b(true|false|max)\b

  enum:
    begin: (enum)(\s+)([A-Za-z][A-Za-z0-9_]*)(\s*)(\{)
    beginCaptures:
      '1': {name: keyword.source.proto}
      '3': {name: entity.class.name.proto}
    end: \}
    patterns:
    - include: '#option'
    - include: '#comments'
    - name: keyword.source.proto
      match: \b(to|extensions)\b
    - match: ([A-Za-z][A-Za-z0-9_]*)(\s*)(=)(\s*)([0-9]*)
      captures:
        '1': {name: constant.other.proto}
        '5': {name: constant.numeric.proto}

  message:
    begin: (message|extend)(\s+)([A-Za-z][A-Za-z0-9_.]*)(\s*)(\{)
    beginCaptures:
      '1': {name: keyword.source.proto}
      '3': {name: entity.name.class.proto}
    end: \}
    patterns:
    - include: $self
    - include: '#enum'
    - include: '#option'
    - include: '#comments'
    - include: '#oneof'
    - begin: (optional|repeated|required|to|extensions)(\s+)
      beginCaptures:
        '1': {name: keyword.source.proto}
      end: ;
      patterns:
      - include: '#storagetypes'
      - match: ([A-Za-z][A-Za-z0-9_]*)(\s+)([A-Za-z][A-Za-z0-9_]*)
        captures:
          '1': {name: entity.name.class.proto}
    - begin: \[
      end: \]
      patterns:
      - name: keyword.source.proto
        match: default|packed
      - include: '#constants'

  oneof:
    begin: (oneof)(\s+)([A-Za-z][A-Za-z0-9_]*)(\s*)(\{)
    beginCaptures:
      '1': {name: keyword.source.proto}
    end: \}
    patterns:
    - include: '#option'
    - include: '#comments'
    - name: keyword.source.proto
      match: \b(to|extensions)\b
    - match: ([A-Za-z][A-Za-z0-9_]*)(\s+)([A-Za-z][A-Za-z0-9_]*)(\s*)(=)(\s*)([0-9]*)
      captures:
        '1': {name: entity.name.class.proto}
        '7': {name: constant.numeric.proto}

  option:
    begin: (\b)(option)(\b)
    beginCaptures:
      '2': {name: keyword.source.proto}
    end: ;
    patterns:
    - include: '#strings'
    - name: storage.type.proto
      match: default|packed|optimize\_for|java\_package|java\_outer\_classname|go\_package|deprecated|lazy
    - name: constant.language.proto
      match: (CODE\_SIZE|SPEED)

  packaging:
    match: (package|import)(\s+)(["]?[A-Za-z][A-Za-z0-9_.]*["]?)(;)
    captures:
      '1': {name: keyword.source.proto}
      '2': {name: entity.name.tag}

  storagetypes:
    name: storage.type.proto
    match: \b(double|float|int32|int64|uint32|uint64|sint32|sint64|fixed32|fixed64|sfixed32|sfixed64|bool|string|bytes)\b

  strings:
    name: string.quoted.double.proto
    begin: '"'
    end: '"'
